@page "/Story"
@using System.IO
@inject IJSRuntime JS

<h1>Story</h1>
@if (heroName == "Rick Astley")
{
    <script>
        function RickRoll() {
            window.open("https://www.youtube.com/watch?v=dQw4w9WgXcQ", "_blank");
        }
        RickRoll();
    </script>

}
else 

@if (string.IsNullOrWhiteSpace(heroName))
{
  
        <input id="hero-name-input" type="text" @bind="@heroName" placeholder="@GetPlaceholderText()" />
        <button @onclick="SaveHeroName">Validate</button>
    
    
}
else

{
      <div class="language-selection">
        <select @onchange="OnSelectLanguageChanged" id="SelectLanguage">
            <option value="EN">English</option>
            <option value="FR">Français</option>
        </select>
    </div>
    <div class="main-container">
        <input type="text" @bind="searchQuery" placeholder="Search stories..." />
        @if (selectedStory is null)
        {
            <div class="story-container">
                <h3>@GetGreetingText()</h3>
             <h3> 


             </h3>
              <h3> 


             </h3>
                @foreach (var story in FilteredStories())
                {
                    <div class="story-card" @onclick="(() => selectedStory = story)">
                        <div class="image-container">
                            <img alt="@story.Title" src="@story.Picture">
                        </div>
                        <div class="text-container">
                            <h2>@story.Title</h2>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="story-modal">
                <h4>@selectedStory.Title</h4>
                <p>@selectedStory.Content</p>
                <button @onclick="(() => selectedStory = null)">@GetButtonText()</button>
            </div>
        }
    </div>
}



<style>
    :root {
        --background-color-light: #f0f4f8;
        --text-color-light: #333333;
        --container-bg-color-light: #ffffff;
        --header-color-light: #333333;
        --subtext-color-light: #aaaaaa;
        --background-color-dark: #121212;
        --text-color-dark: #ffffff;
        --container-bg-color-dark: #1e1e1e;
        --header-color-dark: #ffffff;
        --subtext-color-dark: #bbbbbb;
    }

    body {
        background-color: var(--background-color);
        color: var(--text-color);
    }

    .container {
        text-align: center;
        background: var(--container-bg-color);
        padding: 40px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 600px;
        margin: 0 20px;
    }

    header h1 {
        font-size: 2.5rem;
        color: var(--header-color);
        margin-bottom: 0.5rem;
    }

    p {
        font-size: 1.2rem;
        color: var(--text-color);
        margin-bottom: 2rem;
    }

    .build-number {
        font-size: 0.9rem;
        color: var(--subtext-color);
        margin-bottom: 1.5rem;
    }

    .btn-google {
        display: inline-block;
        background-color: #4285f4;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        text-decoration: none;
        font-size: 1rem;
        transition: background-color 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .btn-google:hover {
        background-color: #357ae8;
    }

    .development-notice {
        font-size: 0.9rem;
        color: #ff9800;
        margin-top: 2rem;
    }

    .theme-switch {
        position: absolute;
        top: 20px;
        right: 20px;
    }

    #SelectLanguage {
        padding: 8px 12px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: orange;
        color: black;
        margin-left: 10px;
    }

    #SelectLanguage option {
        background-color: #fff;
        color: black;
    }

    #SelectLanguage option:hover {
        background-color: #f0f0f0;
    }

    #hero-name-input {
        padding: 8px 12px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-left: 10px;
    }

    .main-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }

    .story-container {
        display: flex;
        flex-wrap: wrap;
        width: 100%;
    }

    .story-card {
        border: 1px solid;
        border-radius: 10px;
        padding: 10px;
        margin: 5px;
        width: calc(50% - 20px); /* Adjust for margin */
        display: flex;
        flex-direction: row;
        transition: transform 0.3s;
        cursor: pointer;
    }

    .image-container {
        width: 50%;
    }

    img {
        max-width: 100%;
        height: auto;
        border-radius: 5px;
    }

    .text-container {
        width: 50%;
        padding: 0 10px;
    }

    h2 {
        font-size: 24px;
        font-weight: bold;
        margin-top: 0;
        margin-bottom: 10px;
    }

    p {
        font-size: 16px;
        margin-bottom: 10px;
    }

    .story-modal {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 80%;
        margin: auto;
        margin-top: 50px;
    }

    .story-modal h4 {
        font-size: 24px;
        font-weight: bold;
        margin-top: 0;
        margin-bottom: 20px;
    }

    .story-modal button {
        background-color: orange;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .story-modal button:hover {
        background-color: darkorange;
    }

    .language-selection {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .language-selection input {
        margin-left: 10px;
    }

    .story-card:hover {
        transform: scale(1.05);
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    /* Dark Mode Styles */
    body.dark-mode {
        --background-color: var(--background-color-dark);
        --text-color: var(--text-color-dark);
        --container-bg-color: var(--container-bg-color-dark);
        --header-color: var(--header-color-dark);
        --subtext-color: var(--subtext-color-dark);
    }

    .dark-mode .story-modal {
        background-color: #333;
        color: #fff;
    }

    .dark-mode .story-modal h4 {
        color: #fff;
    }

    .dark-mode .story-modal button {
        background-color: #ff9800;
    }
</style>


@code {
    private const string DefaultLanguage = "EN";
    private string selectedLanguage = DefaultLanguage;
    private string searchQuery = string.Empty;

    public record StoryData(string Title, string Picture, string Content);

    

    private string heroName;
    private StoryData selectedStory;
    private List<StoryData> stories = new();

    protected override void OnInitialized()
    {
        var storedName = RetrieveSavedName();
        if (!string.IsNullOrEmpty(storedName))
            heroName = storedName;

        stories = UpdateStories(selectedLanguage);
    }

    private List<StoryData> UpdateStories(string language)
    {
        if (language == "FR")
        {
            return new List<StoryData>
            {
                new StoryData("Le Gâteau", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "cake-1914463_1280.jpg", $"Alerte ! Alerte ! Un gâteau a été volé ! Un héros est apparu. Le nom du héros était {heroName}. Ils ont attrapé le voleur. Le boulanger a exprimé sa gratitude à {heroName}. Les gâteaux ont été collectés et mangés. Un gâteau a été offert à {heroName}. MIAM MIAM s'est exclamé {heroName}."),
                new StoryData("Le Trésor du Pirate", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "pirate-1234567_1280.jpg", $"Alerte ! Alerte ! Les habitants de l'île de Tortuga sont en émoi. Un vieux parchemin révélant l'emplacement du trésor légendaire du pirate Barbe Noire a été découvert ! Un(e) héros/héroïne apparut, prêt(e) à affronter les dangers de la mer. Le nom(e) de ce héros/héroïne est {heroName}. Après une aventure mouvementée et des combats contre des flibustiers, le trésor fut enfin découvert. Le village de Tortuga célébra {heroName} comme le plus grand(e) pirate de tous les temps !"),

new StoryData("La Quête du Dragon d'Or", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "", $"Une prophétie ancestrale raconte l'existence d'un dragon légendaire, gardien d'un trésor inestimable. Ce dragon, fait d'or pur, réside au sommet de la montagne interdite, où nul mortel n'a jamais osé s'aventurer. Un(e) héro/héroïne audacieux(se) se leva pour relever le défi de la quête du dragon d'or. Son nom(e) est {heroName}, et il/elle est prêt(e) à affronter tous les dangers pour réussir sa mission. Guidé(e) par sa bravoure et sa détermination, {heroName} escalada la montagne et défia le dragon. Après un combat épique, le dragon, impressionné par son courage, lui céda le trésor. Ainsi, {heroName} devint célèbre dans tout le royaume comme le plus grand chasseur de trésors."),

new StoryData("La Légende de l'Épée de Lumière", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "", $"Dans un monde plongé dans les ténèbres, une légende ancienne raconte l'existence d'une épée légendaire, forgée dans la lumière elle-même. Cette épée, capable de vaincre les forces du mal, attend son héros/héroïne destiné(e) à la manier. Un(e) héro/héroïne courageux(se) se lève pour relever le défi de retrouver l'Épée de Lumière et sauver le monde de l'obscurité éternelle. Son nom(e) est {heroName}, et son destin est de devenir le(la) gardien(ne) de l'Épée de Lumière. {heroName}, accompagné(e) de ses fidèles compagnons, entreprend un voyage périlleux à travers des contrées dangereuses. Après de nombreux défis et épreuves, {heroName} découvre enfin l'Épée de Lumière. Avec cette épée à ses côtés, {heroName} affronte l'obscurité et ramène la lumière dans le monde. Désormais, {heroName} est vénéré(e) comme le(la) sauveur(se) de la prophétie, et son nom résonne dans les annales de l'histoire."),

new StoryData("Le Mystère de la Raspberry Pi 4", "https://raw.githubusercontent.com/anonimouche-Dev/Media/77b48b6a4449b98b6b67e34fd2827784e04263c0/nouveau-raspberry-pi-4-modele-b-2gb.webp" + "", $"Un jour, dans un lointain laboratoire informatique, une Raspberry Pi 4 a mystérieusement disparu. Un(e) héros/héroïne appelé(e) {heroName} a été appelé(e) pour résoudre ce mystère. {heroName}, armé(e) de son clavier et de sa souris, a traqué les indices et résolu le mystère de la Raspberry Pi 4 manquante. Grâce à son ingéniosité, {heroName} a découvert que la Raspberry Pi 4 s'était cachée dans un tas de câbles réseau ! Le laboratoire a célébré {heroName} comme le(la) plus grand(e) détective informatique de tous les temps !"),

new StoryData("L'Aventure de l'Ultimaker S7", "https://raw.githubusercontent.com/anonimouche-Dev/Media/77b48b6a4449b98b6b67e34fd2827784e04263c0/S7-hero-module.webp" + "", $"Un(e) Héro/héroïne intrépide nommé(e) {heroName} s'est lancé(e) dans une quête pour maîtriser l'Ultimaker S7. {heroName} a dû affronter des défis redoutables, tels que le calibrage de l'extrudeuse et le nivellement du lit d'impression. Après de nombreuses heures d'essais et d'erreurs, {heroName} a réussi à imprimer une pièce parfaite ! L'Ultimaker S7 a été impressionnée par les compétences de {heroName} et a accepté de devenir son fidèle allié dans ses futures créations."),

new StoryData("Le Codeur et la Licorne", "https://link" + "", $"Un jour, un codeur nommé {heroName} rencontra une licorne dans son code. La licorne, se baladant librement dans la matrice de bits, était curieuse de découvrir le monde du code. {heroName} a enseigné à la licorne les joies du codage, et ensemble, ils ont créé des programmes magiques ! Désormais, {heroName} et la licorne travaillent en tandem, apportant magie et technologie au monde entier."),

                new StoryData("Le Chien Abandonné", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "chihuahua-3988105_1280.jpg", $"Un jour, {heroName} a trouvé un chien abandonné au bord de la route. Déterminé à lui donner une nouvelle vie, {heroName} l'a adopté et l'a nommé Mambo. Ensemble, ils se sont lancés dans de nombreuses aventures et sont devenus les meilleurs amis.")
            };
        }
        else
        {
            return new List<StoryData>
            {
                new StoryData("The Cake", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "cake-1914463_1280.jpg", $"Alert! Alert! A cake has been stolen! A hero appeared. The name of the hero was {heroName}. They caught the thief. The baker expressed his gratitude to {heroName}. The cakes were collected and eaten. A cake was offered to {heroName}. MIAM MIAM exclaimed {heroName}."),
               new StoryData("The Quest for the Golden Dragon", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "", $"An ancient prophecy tells of a legendary dragon, guardian of an invaluable treasure. This dragon, made of pure gold, resides at the top of the forbidden mountain, where no mortal has ever dared to venture. A brave hero(ine) rose to take on the challenge of the quest for the golden dragon. Their name is {heroName}, and they are ready to face all dangers to succeed in their mission. Guided by their bravery and determination, {heroName} climbed the mountain and faced the dragon. After an epic battle, the dragon, impressed by their courage, granted them the treasure. Thus, {heroName} became famous throughout the kingdom as the greatest treasure hunter."),

new StoryData("The Legend of the Sword of Light", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "", $"In a world plunged into darkness, an ancient legend tells of a legendary sword, forged in the light itself. This sword, capable of defeating the forces of evil, awaits its destined hero(ine) to wield it. A courageous hero(ine) rises to take on the challenge of finding the Sword of Light and saving the world from eternal darkness. Their name is {heroName}, and their destiny is to become the guardian of the Sword of Light. {heroName}, accompanied by their faithful companions, embarks on a perilous journey through dangerous lands. After many challenges and trials, {heroName} finally discovers the Sword of Light. With this sword by their side, {heroName} faces the darkness and brings light back to the world. Henceforth, {heroName} is revered as the savior of the prophecy, and their name echoes in the annals of history."),

new StoryData("The Mystery of the Raspberry Pi 4", "https://raw.githubusercontent.com/anonimouche-Dev/Media/77b48b6a4449b98b6b67e34fd2827784e04263c0/nouveau-raspberry-pi-4-modele-b-2gb.webp" + "", $"One day, in a distant computer lab, a Raspberry Pi 4 mysteriously disappeared. A hero(ine) named {heroName} was called to solve this mystery. Armed with their keyboard and mouse, {heroName} tracked the clues and solved the mystery of the missing Raspberry Pi 4. Thanks to their ingenuity, {heroName} discovered that the Raspberry Pi 4 had hidden in a pile of network cables! The lab celebrated {heroName} as the greatest computer detective of all time!"),

               new StoryData("The Adventure of the Ultimaker S7", "https://raw.githubusercontent.com/anonimouche-Dev/Media/77b48b6a4449b98b6b67e34fd2827784e04263c0/S7-hero-module.webp" + "", $"A daring hero(ine) named {heroName} embarked on a quest to master the Ultimaker S7. {heroName} had to face formidable challenges, such as calibrating the extruder and leveling the print bed. After many hours of trial and error, {heroName} succeeded in printing a perfect piece! The Ultimaker S7 was impressed by {heroName}'s skills and agreed to become their loyal ally in future creations."),

               new StoryData("The Coder and the Unicorn", "https://link" + "", $"One day, a coder named {heroName} encountered a unicorn in their code. The unicorn, freely wandering through the matrix of bits, was curious to discover the world of coding. {heroName} taught the unicorn the joys of coding, and together, they created magical programs! Now, {heroName} and the unicorn work in tandem, bringing magic and technology to the world."),

                new StoryData("The Abandoned Dog", "https://raw.githubusercontent.com/anonimouche-Dev/Media/b22af42cdbfe8d390b9d96270d42b4d34da0492c/" + "chihuahua-3988105_1280.jpg", $"Once upon a time, a little dog named mambo lived in a peaceful village. One day, she got lost and found herself alone and scared in a dense forest. Fortunately, a kind hero named {heroName} appeared and heard mambo's plaintive barking.")
                


            };
        }
    }

    private void OnSelectLanguageChanged(ChangeEventArgs e)
    {
        selectedLanguage = e.Value.ToString();
        stories = UpdateStories(selectedLanguage);
        StateHasChanged();
    }

    private string GetPlaceholderText() => selectedLanguage == "FR" ? "Entrez votre nom" : "Enter your name";
    private string GetGreetingText() => selectedLanguage == "FR" ? $"Bonjour {heroName}" : $"Hello {heroName}";
    private string GetButtonText() => selectedLanguage == "FR" ? "Lire une autre histoire" : "Read another story";

    private async Task ToggleTheme(ChangeEventArgs e)
    {
        bool isDarkMode = (bool)e.Value;
        if (isDarkMode)
            await JS.InvokeVoidAsync("toggleTheme", "dark-mode");
        else
            await JS.InvokeVoidAsync("toggleTheme", "");
    }

    private void SaveHeroName()
    {
        string filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "options.txt");
        string content = $"Name={heroName}";
        File.WriteAllText(filePath, content);
    }

    private IEnumerable<StoryData> FilteredStories() =>
        string.IsNullOrWhiteSpace(searchQuery) ? stories : stories.Where(s => s.Title.Contains(searchQuery, StringComparison.OrdinalIgnoreCase));

    private string RetrieveSavedName()
    {
        try
        {
            string filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "options.txt");
            string paramName = "Name=";
            if (!File.Exists(filePath))
                return string.Empty;

            string nameLine = File.ReadLines(filePath)
                                   .FirstOrDefault(line => line.StartsWith(paramName));
            return nameLine?.Substring(paramName.Length) ?? string.Empty;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while reading the file: {ex.Message}");
            return string.Empty;
        }
    }
}
